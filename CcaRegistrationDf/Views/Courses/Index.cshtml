@model IEnumerable<CcaRegistrationDf.Models.Course>

@{
    ViewBag.Title = "Courses";
}

<h2>Courses</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table id="grid-basic" class="table table-condensed table-hover table-striped bg-white">
    <thead>
        <tr>
            <th data-column-id="Session">
                @Html.DisplayName("Session")
            </th>
            <th data-column-id="Category">
                @Html.DisplayName("Category")
            </th>
            <th data-column-id="Provider">
                @Html.DisplayName("Provider")
            </th>
            <th data-column-id="Course Name">
                @Html.DisplayName("Course Name")
            </th>
            <th data-column-id="Credit" >
                @Html.DisplayNameFor(model => model.Credit)
            </th>
            <th data-column-id="Code">
                @Html.DisplayNameFor(model => model.Code)
            </th>

            <th data-column-id="Active" data-formatter="state">
                @Html.DisplayNameFor(model => model.IsActive)
            </th>

            <th data-column-id="Actionlinks" data-formatter="actions" data-sortable="false">
                @Html.DisplayName("Actions")
            </th>
        </tr>
    </thead>


    <tbody>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Session.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OnlineProvider.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Credit)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Code)
                </td>

                <td>
                    @if (item.IsActive == true)
                    { <p>check</p> }
                    
                    else
                    { <p>not</p> }

                    @*@Html.DisplayFor(modelItem => item.IsActive)*@
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ID)

                </td>
            </tr>
        }

    </tbody>
</table>

@section Scripts {
    @Scripts.Render("~/bundles/bootgrid")
    <script>
        // This script uses Jquery Bootgrid to format the data into a grid.  It also creates buttons form the edit, delete, details actions.
        $(function () {
            var grid = $("#grid-basic").bootgrid({
                formatters: {
                    "state": function (column, row) {
                        var checkBox = "";
                        if ($.trim(row.Active) == "check") checkBox = "checked=\"checked\"";
                        
                        return "<input class=\"check-box\"" + checkBox + "disabled=\"disabled\" type=\"checkbox\" />";
                        
                    },
                
                    "actions": function (column, row) {
                        var id = $.trim(row.Actionlinks);
                        return "<a href=\" /Courses/Edit/" + id + "\" class=\"btn btn-xs btn-default command-edit\" data-row-id=\"" + id + "\"><span class=\"glyphicon glyphicon-edit\"></span></button> ";
                           // + "<a href=\" /Courses/Details/" + id + "\" class=\"btn btn-xs btn-default command-details\" data-row-id=\"" + id + "\"><span class=\"glyphicon glyphicon-menu-hamburger\"></span></a>";
                    }
                }
            });

        });

    </script>
}
