@model CcaRegistrationDf.Models.StudentCcas.StudentViewModel

@{
    ViewBag.Title = "Account Setup";
}

<h2>Account Setup</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">


        <h4>Student Information</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-4">
                @Html.EditorFor(model => model.StudentFirstName, new { htmlAttributes = new { @class = "form-control", title = "First Name as it appears on Birth Certificate", placeholder = "*Student First Name" } })
                @Html.ValidationMessageFor(model => model.StudentFirstName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.StudentLastName, new { htmlAttributes = new { @class = "form-control", title = "Last Name as it appears on Birth Certificate", placeholder = "*Student Last Name" } })
                @Html.ValidationMessageFor(model => model.StudentLastName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.StudentDOB, new { @class = "form-control datepicker", id = "birthdatePicker", title = "Birthdate must be in mm/dd/yyyy format.", placeholder = "*Date of Birth (mm/dd/yyyy)" })
                @Html.ValidationMessageFor(model => model.StudentDOB, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group" id="EnrollmentInformation">

            <div class="col-md-4">
                @Html.DropDownListFor(model => model.EnrollmentLocationID, Model.EnrollmentLocation, "*Enrolled District", new { @class = "form-control dropdown-wrapper", id = "EnrollmentLocation", title = "School District currently enrolled. (Primary)" })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.DropDownListFor(model => model.EnrollmentLocationSchoolNamesID, Model.EnrollmentLocationSchoolNames, "Current School", new { @class = "form-control dropdown-wrapper", id = "CurrentSchool", title = "School in charge of student records and graduation." })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationSchoolNamesID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 hide" id="HomeSchoolRelease">
                @Html.LabelFor(model => model.HasHomeSchoolRelease)
                <div class="col-md-1">
                    @Html.CheckBoxFor(model => model.HasHomeSchoolRelease, new { @class = "checkbox-inline" })
                    @Html.ValidationMessageFor(model => model.HasHomeSchoolRelease, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.SchoolOfRecord, new { htmlAttributes = new { @class = "form-control hide", id = "CurrentPrivateSchool", title = "Private School Name.", placeholder = "*Private School Name" } })
                @Html.ValidationMessageFor(model => model.SchoolOfRecord, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.GraduationDate, new { @class = "form-control datepicker", id = "graduationdatePicker", title = "Approximate Date is acceptable", placeholder = "*Graduation Date (Approximate)" })
                @Html.ValidationMessageFor(model => model.GraduationDate, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.StudentEmail, new { htmlAttributes = new { @class = "form-control", title = "Please provide Student Email ", placeholder = "Student Email" } })
                @Html.ValidationMessageFor(model => model.StudentEmail, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.TextBoxFor(model => model.SSID, new { @class = "form-control", id = "ssid", title = "Private/Home School leave blank", placeholder = "Student Number(Public/Charter Only)" })
                @Html.ValidationMessageFor(model => model.SSID, "", new { @class = "text-danger" })
            </div>

        </div>

        <hr />

        <h4>Student Accomodations </h4>
        <hr />

        @* Accomodations *@
        @* Checkboxes with accomodation flags *@

        <div class="row">
            @Html.LabelFor(model => model.IsEarlyGraduate, htmlAttributes: new { @class = "control-label-left col-md-3" })
            <div class="col-md-1">

                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsEarlyGraduate)
                    @Html.ValidationMessageFor(model => model.IsEarlyGraduate, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            @Html.LabelFor(model => model.IsFeeWaived, htmlAttributes: new { @class = "control-label-left col-md-3" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsFeeWaived)
                    @Html.ValidationMessageFor(model => model.IsFeeWaived, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>



        <div class="row">
            @Html.LabelFor(model => model.IsIEP, htmlAttributes: new { @class = "control-label-left col-md-3" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsIEP)
                    @Html.ValidationMessageFor(model => model.IsIEP, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        <div class="row">
            @Html.LabelFor(model => model.IsSection504, htmlAttributes: new { @class = "control-label-left col-md-3" })
            <div class="col-md-1">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.IsSection504)
                    @Html.ValidationMessageFor(model => model.IsSection504, "", new { @class = "text-danger" })

                </div>
            </div>

        </div>

        <br />

      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $(function () {

            $('input:radio:first').prop("checked", true).trigger("click");
            $('#EnrollmentLocation option:first').attr("selected", true);

            //Datepicker
            // Make the default start date 15 years ago today for birthdays of secondary schoolers.
            var start = new Date();
            start.setFullYear(start.getFullYear() - 15);
            $("#birthdatePicker").datepicker({
                changeMonth: true,
                changeYear: true,
                defaultDate: start
            });

            $("#graduationdatePicker").datepicker({
                changeMonth: true,
                changeYear: true
            });
             

            $('input:radio:first').prop("checked", true).trigger("click");


            //Enrollment DropdownLists
            $('#EnrollmentLocation').change(function () {

                var lea = $("#EnrollmentLocation option:selected").text();

                if (lea.toLowerCase().indexOf("home school") >= 0) {
                    $("#ssid").prop('disabled', true).prop('required', false);
                    $("#CurrentSchool").prop('disabled', true);
                    $("#CounselorSection :input").attr('disabled', true);
                    $("#CurrentPrivateSchool").addClass('hide');
                    $("#HomeSchoolRelease").removeClass('hide');
                }
                else if (lea.toLowerCase().indexOf("private school") >= 0) {
                    $("#ssid").prop('disabled', true).prop('required', false);
                    $("#CurrentSchool").prop('disabled', true);
                    $("#CounselorSection :input").removeAttr('disabled');
                    $("#CurrentPrivateSchool").removeClass('hide');
                    $("#HomeSchoolRelease").addClass('hide');
                }
                else {
                    $("#ssid").prop('disabled', false).prop('required', true);
                    $("#CounselorSection :input").removeAttr('disabled');
                    $("#CurrentSchool").prop('disabled', false);
                    $("#CurrentPrivateSchool").addClass('hide');
                    $("#HomeSchoolRelease").addClass('hide');
                }

                $('#CurrentSchool').empty();
                var items = '<option value="">Select School</option>';
                $('#CurrentSchool').html(items);
                var district = $("#EnrollmentLocation option:selected").val();
                var districtName = $("#EnrollmentLocation option:selected").text();
                if (district != "") {


                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSchoolNames", "Students")',
                        data: { district: district },
                        dataType: 'json',
                        success: function (schoolList) {

                            $.each(schoolList, function (i, school) {

                                $('#CurrentSchool').append("<option value='" + school.Value + "'>" + school.Text + "</option>");

                            });
                        },
                        error: function (result) {
                            alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                        }
                    });
                }
                else {
                    var items = '<option value="">Select Enrollment Location First</option>';
                    $('#Course').html(items);
                }
            });

            $(".phone").mask("(999) 999-9999");

        });
    </script>
}

