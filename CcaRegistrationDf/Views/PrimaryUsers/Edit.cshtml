@model CcaRegistrationDf.Models.StudentCcas.PrimaryUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>PrimaryUser</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control phone" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("District", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EnrollmentLocationID", null, htmlAttributes: new { @class = "form-control", id = "EnrollmentLocation" })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("District", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EnrollmentLocationSchoolNameID", null, htmlAttributes: new { @class = "form-control", id = "CurrentSchool" })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $(function () {

            $('#EnrollmentLocation option:first').attr("selected", true);

            //Enrollment DropdownLists
            // If District is Home School the EnrollmentLocationSchoolID=-1
            // If District is Private School the EnrollmentLocationSchoolID=0
            $('#EnrollmentLocation').change(function () {

                $('#CurrentSchool').empty();
                var items = '<option value="">Select School</option>';
                $('#CurrentSchool').html(items);

                // var lea = $("#EnrollmentLocation option:selected").text();
                var district = $("#EnrollmentLocation option:selected").val();
                var districtName = $("#EnrollmentLocation option:selected").text();

                if (district != "") {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetSchoolNames", "Students")',
                        data: { district: district },
                        dataType: 'json',
                        success: function (schoolList) {

                            $.each(schoolList, function (i, school) {

                                $('#CurrentSchool').append("<option value='" + school.Value + "'>" + school.Text + "</option>");

                            });
                        },
                        error: function (result) {
                            alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                        }
                    });
                }
                else {
                    var items = '<option value="">Select Enrollment Location First</option>';
                    $('#Course').html(items);
                }
            });

        $(".phone").mask("(999) 999-9999");

        });
    </script>
}
