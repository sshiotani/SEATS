@model CcaRegistrationDf.Models.PrimaryCcaViewModel

@{
    ViewBag.Title = "PrimaryEdit";
}

<h2>CCA Acceptance</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.CcaID)

        <div class="form-group">
            @Html.Label("Submission Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@String.Format("{0:MM/dd/yyyy}", Model.ApplicationSubmissionDate)</p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Student", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Model.Student.StudentLastName, @Model.Student.StudentFirstName ,@Model.Student.SSID</p>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Course", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Model.OnlineCourse.Name</p>

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Credit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Model.CourseCredit.Value</p>

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Provider", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <p class="form-control-static">@Model.Provider.Name</p>

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Accept", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsBusinessAdministratorAcceptRejectEnrollment)
                    @Html.ValidationMessageFor(model => model.IsBusinessAdministratorAcceptRejectEnrollment, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Rejection Reason", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                  
                    @Html.DropDownList("PrimaryRejectionReasonsID", null, htmlAttributes: new { @class = "form-control dropdown-wrapper", id = "Session" })

                    @Html.ValidationMessageFor(model => model.PrimaryRejectionReasonsID, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("Rejection Explanation", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PrimaryLEAExplantionRejection, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimaryLEAExplantionRejection, "", new { @class = "text-danger" })
            </div>
        </div>
    
        <div class="form-group">
            @Html.Label("Record Notes", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.PrimaryNotes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PrimaryNotes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Signature", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BusinessAdministratorSignature, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BusinessAdministratorSignature, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
