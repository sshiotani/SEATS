@model CcaRegistrationDf.Models.UserProfileViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>UserProfile</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserId",null, htmlAttributes: new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <div class="form-group">
            @Html.LabelFor(model => model.LocationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LocationID, Model.Location,"Location Type", new { @class = "form-control", id = "LocationType" })
                @Html.ValidationMessageFor(model => model.LocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group hide" id="District">
            @Html.LabelFor(model => model.DistrictID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DistrictID, Model.District, "Districts", new { @class = "form-control", id = "Districts", required = false })

                @Html.ValidationMessageFor(model => model.DistrictID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserLocationID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserLocationID, Model.UserLocation,"Locations",  new { @class = "form-control", id ="Locations" })
                @Html.ValidationMessageFor(model => model.UserLocationID, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(m => m.UserLocationName, new {id = "LocationName" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
<script>
    $(function () {

        $('#LocationType').change(function () {

            $("#Locations").empty();

            $('#District').addClass('hide');

            var items = '<option value="">Select Location</option>';
            $('#Locations').html(items);
            var locationId = $("#LocationType option:selected").val();
            var locationName = $("#LocationType option:selected").text();

            if (locationId == "1") {

                $('#District').removeClass('hide');

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetDistricts", "UserProfiles")',
                    
                    dataType: 'json',
                    success: function (districtList) {

                        $.each(districtList, function (i, district) {

                            $('#Districts').append("<option value='" + district.Value + "'>" + district.Text + "</option>");

                        });
                    },
                    error: function (result) {
                        alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                    }
                });
            }
            else if (locationId == "2")
            {
                

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetProviders", "UserProfiles")',

                    dataType: 'json',
                    success: function (providerList) {

                        $.each(providerList, function (i, provider) {

                            $('#Locations').append("<option value='" + provider.Value + "'>" + provider.Text + "</option>");

                        });
                    },
                    error: function (result) {
                        alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                    }
                });
            }
            else
            {
                $('#District').addClass('hide');
                var items = '<option value="">Select Location First</option>';
                $('#Locations').html(items);

            }
        });

        $('#Districts').change(function () {

            $("#Locations").empty();

            
            var items = '<option value="">Select Location</option>';
            $('#Locations').html(items);
            var districtId = $("#Districts option:selected").val();
            var districtName = $("#Districts option:selected").text();

            if (districtId != "") {

                $.ajax({
                    type: "POST",
                    url: '@Url.Action("GetSchools", "UserProfiles")',
                    data: { districtId: districtId },
                    dataType: 'json',
                    success: function (locations) {

                        $.each(locations, function (i, school) {

                            $('#Locations').append("<option value='" + school.Value + "'>" + school.Text + "</option>");

                        });
                    },
                    error: function (result) {
                        alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                    }
                });
            }        
            else {
                var items = '<option value="">Select District First</option>';
                $('#Locations').html(items);
               
               
            }
        });

        $('#Locations').change(function () {

            var locationName = $("#Locations option:selected").text();

            $('#LocationName').val(locationName);

        });

    });

</script>
}