@model SEATS.Models.CounselorViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Counselor</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-4">
                @Html.DropDownList("EnrollmentLocationID", null, htmlAttributes: new { @class = "form-control dropdown-wrapper", id = "EnrollmentLocation" })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationID, "", new { @class = "text-danger" })
            </div>

            <div class="col-md-4">
                @Html.DropDownList("EnrollmentLocationSchoolNameID", null, htmlAttributes: new { @class = "form-control dropdown-wrapper", id = "CurrentSchool" })
                @Html.ValidationMessageFor(model => model.EnrollmentLocationSchoolNameID, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.EditorFor(model => model.School, new { htmlAttributes = new { @class = "form-control hide", id = "CurrentPrivateSchool", title = "Private School Name.", placeholder = "*Private School Name" } })
                @Html.ValidationMessageFor(model => model.School, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4">
                @Html.DropDownList("CounselorID", null, htmlAttributes: new { @class = "form-control dropdown-wrapper", id = "Counselors" })
                @Html.ValidationMessageFor(model => model.CounselorID, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <hr />
        <div class="hide" id="CounselorInfo">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" ,id ="Email"} })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control",id ="FirstName" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" ,id ="LastName"} })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control phone" ,id ="Phone"} })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CactusID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.CactusID, new { @class = "form-control", id = "CactusID" })
                    @Html.ValidationMessageFor(model => model.CactusID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @Html.HiddenFor(x => x.School, new { id = "SchoolName" })

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")


    <script>
        $(function () {

            //Enrollment DropdownLists
            // If District is Home School the EnrollmentLocationSchoolID=-1
            // If District is Private School the EnrollmentLocationSchoolID=0
            $('#EnrollmentLocation').change(function () {

                $('#CurrentSchool, #Counselors').empty();
                var items = '<option value="">Select School</option>';
                $('#CurrentSchool').html(items);

                // var lea = $("#EnrollmentLocation option:selected").text();
                var district = $("#EnrollmentLocation option:selected").val();
                var districtName = $("#EnrollmentLocation option:selected").text();


                if (districtName.toLowerCase().indexOf("private school") >= 0) {
                    $("#CurrentSchool").prop('disabled', true).prop('required', false);
                    $("#CurrentPrivateSchool").removeClass('hide').prop('required', true);
                    $('#SchoolId').val("0");
                   
                }
                else {
                    if (district != "") {

                        $.ajax({
                            type: "POST",
                            url: '@Url.Action("GetSchoolNames", "Students")',
                            data: { district: district },
                            dataType: 'json',
                            success: function (schoolList) {

                                $.each(schoolList, function (i, school) {

                                    $('#CurrentSchool').append("<option value='" + school.Value + "'>" + school.Text + "</option>");

                                });
                            },
                            error: function (result) {
                                alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                            }
                        });
                    }
                    else {
                        var items = '<option value="">Select Enrollment Location First</option>';
                        $('#Course').html(items);
                    }

                }
            });

            $('CurrentPrivateSchool').keypress( function (e) {
                if (e.which == 13) {
                    var schoolName = $('CurrentPrivateSchool').val();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetPrivateSchoolCounselors", "Counselors")',
                        data: { schoolName: schoolName },
                        dataType: 'json',
                        success: function (counselors) {

                            $.each(counselors, function (i, counselor) {

                                $('#Counselors').append("<option value='" + counselor.Value + "'>" + counselor.Text + "</option>");

                            });
                        },
                        error: function (result) {
                            alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                        }
                    });
                }
            });

            $('#CurrentSchool').change(function () {

                $('#Counselors').empty();
                var items = '<option value="">Select Counselor</option>';
                $('#Counselors').html(items);


                var schoolId = $("#CurrentSchool option:selected").val();
                var schoolName = $("#CurrentSchool option:selected").text();

                $('#SchoolName').val(schoolName);

                if (schoolId != "") {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetCounselors", "Counselors")',
                        data: { schoolId: schoolId },
                        dataType: 'json',
                        success: function (counselors) {

                            $.each(counselors, function (i, counselor) {

                                $('#Counselors').append("<option value='" + counselor.Value + "'>" + counselor.Text + "</option>");

                            });
                        },
                        error: function (result) {
                            alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                        }
                    });
                }
                else {
                    var items = '<option value="">Select</option>';
                    $('#Counselors').html(items);
                }

            });

            $('#Counselors').change(function () {

                $('#CounselorInfo').removeClass('hide');

                var counselorId = $("#Counselors option:selected").val();
             

                if (counselorId != "0")
                {

                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("GetCounselorInformation", "Counselors")',
                        data: { counselorId: counselorId },
                        dataType: 'json',
                        success: function (counselor) {

                            $('#FirstName').val(counselor.FirstName);
                            $('#LastName').val(counselor.LastName);
                            $('#Phone').val(counselor.Phone);
                            $('#Email').val(counselor.Email);


                            
                        },
                        error: function (result) {
                            alert('Service call failed: ' + result.status + ' Type :' + result.statusText);
                        }
                    });
                }
                else
                {
                    $('#FirstName, #LastName, #Phone, #Email, #CactusID').val('');
                   
                }

            });


            $(".phone").mask("(999) 999-9999");

        });
    </script>
}



